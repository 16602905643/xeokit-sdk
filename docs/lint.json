[
  {
    "name": "BimServerClient#call",
    "filePath": "src/plugins/BIMServerLoaderPlugin/BIMServerClient/bimserverclient.js",
    "lines": [
      {
        "lineNumber": 928,
        "line": "\t/**"
      },
      {
        "lineNumber": 929,
        "line": "\t * Call a single method, this method delegates to the multiCall method"
      },
      {
        "lineNumber": 930,
        "line": "\t * @param {string} interfaceName - Interface name, e.g. \"ServiceInterface\""
      },
      {
        "lineNumber": 931,
        "line": "\t * @param {string} methodName - Methodname, e.g. \"addProject\""
      },
      {
        "lineNumber": 932,
        "line": "\t * @param {Object} data - Object with a field per arument"
      },
      {
        "lineNumber": 933,
        "line": "\t * @param {Function} callback - Function to callback, first argument in callback will be the returned object"
      },
      {
        "lineNumber": 934,
        "line": "\t * @param {Function} errorCallback - Function to callback on error"
      },
      {
        "lineNumber": 935,
        "line": "\t * @param {boolean} showBusy - Whether to show busy indication"
      },
      {
        "lineNumber": 936,
        "line": "\t * @param {boolean} showDone - Whether to show done indication"
      },
      {
        "lineNumber": 937,
        "line": "\t * @param {boolean} showError - Whether to show errors"
      },
      {
        "lineNumber": 938,
        "line": "\t * "
      },
      {
        "lineNumber": 939,
        "line": "\t */"
      },
      {
        "lineNumber": 940,
        "line": "\tcall(interfaceName, methodName, data, callback, errorCallback, showBusy = true, showDone = false, showError = true, connectWebSocket = true) {"
      }
    ],
    "codeParams": [
      "interfaceName",
      "methodName",
      "data",
      "callback",
      "errorCallback",
      "showBusy",
      "showDone",
      "showError",
      "connectWebSocket"
    ],
    "docParams": [
      "interfaceName",
      "methodName",
      "data",
      "callback",
      "errorCallback",
      "showBusy",
      "showDone",
      "showError"
    ]
  },
  {
    "name": "Viewer#getSnapshot",
    "filePath": "src/viewer/Viewer.js",
    "lines": [
      {
        "lineNumber": 249,
        "line": "    /**"
      },
      {
        "lineNumber": 250,
        "line": "     * Returns a snapshot of this Viewer's canvas as a Base64-encoded image."
      },
      {
        "lineNumber": 251,
        "line": "     *"
      },
      {
        "lineNumber": 252,
        "line": "     * #### Usage:"
      },
      {
        "lineNumber": 253,
        "line": "     *"
      },
      {
        "lineNumber": 254,
        "line": "     * ````javascript"
      },
      {
        "lineNumber": 255,
        "line": "     * const imageData = viewer.getSnapshot({"
      },
      {
        "lineNumber": 256,
        "line": "     *    width: 500,"
      },
      {
        "lineNumber": 257,
        "line": "     *    height: 500,"
      },
      {
        "lineNumber": 258,
        "line": "     *    format: \"png\""
      },
      {
        "lineNumber": 259,
        "line": "     * });"
      },
      {
        "lineNumber": 260,
        "line": "     * ````"
      },
      {
        "lineNumber": 261,
        "line": "     * @param {*} [params] Capture options."
      },
      {
        "lineNumber": 262,
        "line": "     * @param {Number} [params.width] Desired width of result in pixels - defaults to width of canvas."
      },
      {
        "lineNumber": 263,
        "line": "     * @param {Number} [params.height] Desired height of result in pixels - defaults to height of canvas."
      },
      {
        "lineNumber": 264,
        "line": "     * @param {String} [params.format=\"jpeg\"] Desired format; \"jpeg\", \"png\" or \"bmp\"."
      },
      {
        "lineNumber": 265,
        "line": "     * @returns {String} String-encoded image data."
      },
      {
        "lineNumber": 266,
        "line": "     */"
      },
      {
        "lineNumber": 267,
        "line": "    getSnapshot(params = {}, ok) {"
      }
    ],
    "codeParams": [
      "params",
      "ok"
    ],
    "docParams": [
      "params"
    ]
  },
  {
    "name": "PickResult#reset",
    "filePath": "src/viewer/scene/webgl/PickResult.js",
    "lines": [
      {
        "lineNumber": 295,
        "line": "    /**"
      },
      {
        "lineNumber": 296,
        "line": "     * @private"
      },
      {
        "lineNumber": 297,
        "line": "     * @param value"
      },
      {
        "lineNumber": 298,
        "line": "     */"
      },
      {
        "lineNumber": 299,
        "line": "    reset() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "value"
    ]
  }
]