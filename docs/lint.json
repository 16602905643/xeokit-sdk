[
  {
    "name": "BCFViewpointsPlugin#setViewpoint",
    "filePath": "src/plugins/BCFViewpointsPlugin/BCFViewpointsPlugin.js",
    "lines": [
      {
        "lineNumber": 298,
        "line": "    /**"
      },
      {
        "lineNumber": 299,
        "line": "     * Sets viewer state to the given BCF viewpoint."
      },
      {
        "lineNumber": 300,
        "line": "     *"
      },
      {
        "lineNumber": 301,
        "line": "     * Note that xeokit's {@link Camera#look} is the **point-of-interest**, whereas the BCF ````camera_direction```` is a"
      },
      {
        "lineNumber": 302,
        "line": "     * direction vector. Therefore, when loading a BCF viewpoint, we set {@link Camera#look} to the absolute position"
      },
      {
        "lineNumber": 303,
        "line": "     * obtained by offsetting the BCF ````camera_view_point````  along ````camera_direction````."
      },
      {
        "lineNumber": 304,
        "line": "     *"
      },
      {
        "lineNumber": 305,
        "line": "     * When loading a viewpoint, we also have the option to find {@link Camera#look} as the closest point of intersection"
      },
      {
        "lineNumber": 306,
        "line": "     * (on the surface of any visible and pickable {@link Entity}) with a 3D ray fired from ````camera_view_point```` in"
      },
      {
        "lineNumber": 307,
        "line": "     * the direction of ````camera_direction````."
      },
      {
        "lineNumber": 308,
        "line": "     *"
      },
      {
        "lineNumber": 309,
        "line": "     * @param {*} bcfViewpoint  BCF JSON viewpoint object or \"reset\" / \"RESET\" to reset the viewer, which clears SectionPlanes,"
      },
      {
        "lineNumber": 310,
        "line": "     * shows default visible entities and restores camera to initial default position."
      },
      {
        "lineNumber": 311,
        "line": "     * @params {*} [options] Options for setting the viewpoint."
      },
      {
        "lineNumber": 312,
        "line": "     * @params {Boolean} [options.rayCast=true] When ````true```` (default), will attempt to set {@link Camera#look} to the closest"
      },
      {
        "lineNumber": 313,
        "line": "     * point of surface intersection with a ray fired from the BCF ````camera_view_point```` in the direction of ````camera_direction````."
      },
      {
        "lineNumber": 314,
        "line": "     */"
      },
      {
        "lineNumber": 315,
        "line": "    setViewpoint(bcfViewpoint, options = {}) {"
      }
    ],
    "codeParams": [
      "bcfViewpoint",
      "options"
    ],
    "docParams": [
      "bcfViewpoint"
    ]
  },
  {
    "name": "BimServerClient#call",
    "filePath": "src/plugins/BIMServerLoaderPlugin/BIMServerClient/bimserverclient.js",
    "lines": [
      {
        "lineNumber": 928,
        "line": "\t/**"
      },
      {
        "lineNumber": 929,
        "line": "\t * Call a single method, this method delegates to the multiCall method"
      },
      {
        "lineNumber": 930,
        "line": "\t * @param {string} interfaceName - Interface name, e.g. \"ServiceInterface\""
      },
      {
        "lineNumber": 931,
        "line": "\t * @param {string} methodName - Methodname, e.g. \"addProject\""
      },
      {
        "lineNumber": 932,
        "line": "\t * @param {Object} data - Object with a field per arument"
      },
      {
        "lineNumber": 933,
        "line": "\t * @param {Function} callback - Function to callback, first argument in callback will be the returned object"
      },
      {
        "lineNumber": 934,
        "line": "\t * @param {Function} errorCallback - Function to callback on error"
      },
      {
        "lineNumber": 935,
        "line": "\t * @param {boolean} showBusy - Whether to show busy indication"
      },
      {
        "lineNumber": 936,
        "line": "\t * @param {boolean} showDone - Whether to show done indication"
      },
      {
        "lineNumber": 937,
        "line": "\t * @param {boolean} showError - Whether to show errors"
      },
      {
        "lineNumber": 938,
        "line": "\t * "
      },
      {
        "lineNumber": 939,
        "line": "\t */"
      },
      {
        "lineNumber": 940,
        "line": "\tcall(interfaceName, methodName, data, callback, errorCallback, showBusy = true, showDone = false, showError = true, connectWebSocket = true) {"
      }
    ],
    "codeParams": [
      "interfaceName",
      "methodName",
      "data",
      "callback",
      "errorCallback",
      "showBusy",
      "showDone",
      "showError",
      "connectWebSocket"
    ],
    "docParams": [
      "interfaceName",
      "methodName",
      "data",
      "callback",
      "errorCallback",
      "showBusy",
      "showDone",
      "showError"
    ]
  },
  {
    "name": "PickResult#reset",
    "filePath": "src/viewer/scene/webgl/PickResult.js",
    "lines": [
      {
        "lineNumber": 295,
        "line": "    /**"
      },
      {
        "lineNumber": 296,
        "line": "     * @private"
      },
      {
        "lineNumber": 297,
        "line": "     * @param value"
      },
      {
        "lineNumber": 298,
        "line": "     */"
      },
      {
        "lineNumber": 299,
        "line": "    reset() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "value"
    ]
  }
]